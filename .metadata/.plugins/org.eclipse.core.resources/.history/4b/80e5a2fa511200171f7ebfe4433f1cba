package com.yiibai;

import java.util.HashMap;
import org.hibernate.*;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.*;

public class MainTest {
	public static void main(String[] args) {
		// 在5.1.0版本汇总，hibernate则采用如下新方式获取：
		// 1. 配置类型安全的准服务注册类，这是当前应用的单例对象，不作修改，所以声明为final
		// 在configure("cfg/hibernate.cfg.xml")方法中，如果不指定资源路径，默认在类路径下寻找名为hibernate.cfg.xml的文件
		final StandardServiceRegistry registry = new StandardServiceRegistryBuilder()
				.configure("hibernate.cfg.xml").build();
		// 2. 根据服务注册类创建一个元数据资源集，同时构建元数据并生成应用一般唯一的的session工厂
		SessionFactory sessionFactory = new MetadataSources(registry)
				.buildMetadata().buildSessionFactory();

		
		/**** 上面是配置准备，下面开始我们的数据库操作 ******/
		Session session = sessionFactory.openSession();// 从会话工厂获取一个session

		// creating transaction object
		Transaction t = session.beginTransaction();

		HashMap<String, String> map1 = new HashMap<String, String>();
		map1.put("java is a programming language", "John Milton");
		map1.put("java is a platform", "Ashok Kumar");

		HashMap<String, String> map2 = new HashMap<String, String>();
		map2.put("servlet technology is a server side programming",
				"John Milton");
		map2.put("Servlet is an Interface", "Ashok Kumar");
		map2.put("Servlet is a package", "Rahul Kumar");

		Question question1 = new Question("What is java?", "Alok", map1);
		Question question2 = new Question("What is servlet?", "Jai Dixit", map2);

		session.persist(question1);
		session.persist(question2);

		t.commit();
		session.close();
		System.out.println("successfully stored");
	}
}
